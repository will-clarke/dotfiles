##### -*- mode:shell-script -*-
#!/bin/bash
set -e

DOTFILES_DIR="$HOME/dotfiles"

function dotfiles_help {
    echo "
Usage:

config install    # sets up everything PERFECTLYâ„¢

config download   # download / update dotfiles repo
config brew       # install from Brewfile
config setup      # setup other stuff
config link       # link all the things (with stow)
config unlink     # unlink all the things (with stow)
"
}

# DOWNLOAD_DOTFILES
#############################################################
function download_dotfiles_repo {
    if [ ! -d "$DOTFILES_DIR" ]; then
        git clone --depth=1 https://github.com/will-clarke/dotfiles.git "$DOTFILES_DIR"
        ### TODO: cd to repo and update github config to use ssh?????
        echo "> Dotfiles repo installed in $DOTFILES_DIR"
    else
        (cd "$DOTFILES_DIR" && git pull)
        echo "> Dotfiles repo updated in $DOTFILES_DIR"
    fi
}

# SETUP
#############################################################
function setup {
    setup_apple_defaults
    setup_spacemacs
    setup_alfred
    open $(find "$DOTFILES_DIR/other/dotfiles_stuff/fonts")

    download_mac_store_stuff
    echo "We've updated some Apple settings and ensured that Spacemacs is installed"
}
function download_mac_store_stuff {
    echo "We've done everything!!!"
    echo " Just trying to install some more stuff"
    echo " It doesn't matter if this fails.."
    mas signin $email_address
    mas search monosnap
    # mas search astrogif
}
function setup_apple_defaults {
    defaults write -g ApplePressAndHoldEnabled -bool false
    defaults write -g InitialKeyRepeat -int 15 # normal minimum is 15 (225 ms)
    defaults write -g KeyRepeat -int 1 # normal minimum is 2 (30 ms)
    defaults write -g AppleShowAllFiles -bool true
    defaults write -g NSAutomaticSpellingCorrectionEnabled -bool false
    sudo spctl --master-disable # enable apps downloaded from anywhere...
}
function setup_spacemacs {
    if [ ! -d "$HOME/.emacs.d" ]; then
        git clone --recursive https://github.com/syl20bnr/spacemacs "$HOME/.emacs.d"
    fi
}
function setup_alfred {
    cd "$HOME/Library/Application Support/Alfred 3/"
    git clone https://github.com/will-clarke/alfred-preferences
    mv Alfred.alfredpreferences Alfred.alfredpreferences--OLD
    mv alfred-preferences/Alfred.alfredpreferences Alfred.alfredpreferences
    rm -rf alfred-preferences
    cd - 1> /dev/null
}

# BREW
#############################################################
function install_homebrew {
    if ! command -v brew >/dev/null; then
        curl -fsS 'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
        export PATH="/usr/local/bin:$PATH"
    fi
}

function brew_bundle {
    EMACS=$(which emacs) brew bundle --file="$DOTFILES_DIR/other/dotfiles_stuff/Brewfile" || true
    brew linkapps emacs-plus || true
    # TODO: linkapps is depricated... so we may have to manually link this :/
}

# LINK
#############################################################
function link {
    cd "$DOTFILES_DIR"
    stow -t ~ bash bin config db emacs git ruby tmux vim
    cd - 1> /dev/null
    echo "Linked up a load of stuff to ~"
}

# UNLINK
#############################################################
function unlink {
    cd "$DOTFILES_DIR"
    stow -t ~ bash bin config db emacs git ruby tmux vim
    stow -D -t ~ bash bin config db emacs git ruby tmux vim
    cd - 1> /dev/null
    echo "Deleted a load of symlinks"
}

# INSTALL
#############################################################
function install {
    download_dotfiles_repo
    install_homebrew
    brew_bundle
    link
    setup
    reset
}

# MAIN
#############################################################
function main {
    if [ "$1" == "download" ]; then
        download_dotfiles_repo
    elif [ "$1" == "brew" ]; then
        install_homebrew
        brew_bundle
    elif [ "$1" == "setup" ]; then
        setup
    elif [ "$1" == "link" ]; then
        link
    elif [ "$1" == "unlink" ]; then
        unlink
    elif [ "$1" == "install" ]; then
        install
    else
        dotfiles_help
    fi
}

main "$1"
